{"version":3,"sources":["common/helpers/element.helpers.js","common/helpers/index.js","pages/transfer/transfer.js"],"names":["onUpdateField","id","callback","element","document","getElementById","oninput","event","type","onblur","onSubmitForm","onclick","e","preventDefault","onSetError","error","succeeded","removeElementClass","setErrorMessage","setElementClass","message","classList","add","remove","messageElement","textContent","onSetFormErrors","fieldErrors","Object","entries","forEach","key","value","setValue","elementType","tagName","toLowerCase","onSetValue","console","log","onSetValues","values","target","account","formValidation","validateField","then","result","validateForm","onSave","history","back"],"mappings":"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","file":"transfer.fe7ce288.js","sourceRoot":"..\\src","sourcesContent":["export const onUpdateField = (id, callback) => {\n  const element = document.getElementById(id);\n  element.oninput = event => callback(event);\n\n  if (element.type !== 'checkbox') {\n    element.onblur = event => callback(event);\n  }\n};\n\nexport const onSubmitForm = (id, callback) => {\n  const element = document.getElementById(id);\n  element.onclick = e => {\n    e.preventDefault();\n    callback();\n  };\n};\n\nexport const onSetError = (id, error) => {\n  if (error.succeeded) {\n    removeElementClass(id);\n    setErrorMessage(id, '');\n  } else {\n    setElementClass(id);\n    setErrorMessage(id, error.message);\n  }\n};\n\nconst setElementClass = id => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.classList.add('error');\n  }\n};\n\nconst removeElementClass = id => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.classList.remove('error');\n  }\n};\n\nconst setErrorMessage = (id, message) => {\n  const messageElement = document.getElementById(`${id}-error`);\n  if (messageElement) {\n    messageElement.textContent = message;\n  }\n};\n\nexport const onSetFormErrors = ({ fieldErrors }) => {\n  Object.entries(fieldErrors).forEach(([key, value]) => {\n    onSetError(key, value);\n  });\n};\n\nconst setValue = (element, value) => {\n  const elementType = element.tagName.toLowerCase();\n  if (elementType === 'select' || elementType === 'input') {\n    element.value = value;\n  } else {\n    element.textContent = value;\n  }\n};\n\nconst onSetValue = (id, value) => {\n  const element = document.getElementById(id);\n  console.log({ element });\n  if (element) {\n    setValue(element, value);\n  }\n};\n\nexport const onSetValues = values => {\n  Object.entries(values).forEach(([key, value]) => onSetValue(key, value));\n};\n","export * from './element.helpers';\r\n","import { onUpdateField, onSubmitForm, onSetError, onSetFormErrors, onSetValues } from '../../common/helpers';\r\n\r\n\r\nonUpdateField('select-account', event => {\r\n    const value = event.target.value;\r\n    account = { ...account, type: value };\r\n        formValidation.validateField('select-account', account.type).then(result => {\r\n            onSetError('select-account', result);\r\n        });\r\n    });\r\n\r\nonSubmitForm('transfer-button', () => {\r\n    formValidation.validateForm(account).then(result => {\r\n    onSetFormErrors(result);\r\n    if (result.succeeded) {\r\n    onSave().then(() => {\r\n    history.back();\r\n    });\r\n    }\r\n    });\r\n                \r\n});"]}